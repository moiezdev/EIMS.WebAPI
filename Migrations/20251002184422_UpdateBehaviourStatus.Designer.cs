// <auto-generated />
using System;
using EIMS.WebAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EIMS.WebAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251002184422_UpdateBehaviourStatus")]
    partial class UpdateBehaviourStatus
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EIMS.WebAPI.Models.BehaviourStatus", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TeacherComment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ToTable("BehaviourStatus");
                });

            modelBuilder.Entity("EIMS.WebAPI.Models.Complaint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("By")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ComplaintText")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("LevelId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LevelId");

                    b.ToTable("Complaint");
                });

            modelBuilder.Entity("EIMS.WebAPI.Models.Level", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("LevelNumber")
                        .HasColumnType("integer");

                    b.Property<int?>("RecordHistoryId")
                        .HasColumnType("integer");

                    b.Property<string>("StudentId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RecordHistoryId");

                    b.HasIndex("StudentId");

                    b.ToTable("Level");
                });

            modelBuilder.Entity("EIMS.WebAPI.Models.MonthlyGrade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("LevelId")
                        .HasColumnType("integer");

                    b.Property<string>("Month")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LevelId");

                    b.ToTable("MonthlyGrades");
                });

            modelBuilder.Entity("EIMS.WebAPI.Models.PersonalData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AdmissionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PersonalData");
                });

            modelBuilder.Entity("EIMS.WebAPI.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("LevelId")
                        .HasColumnType("integer");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("SubmissionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TeacherComments")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LevelId");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("EIMS.WebAPI.Models.RecordHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("RecordHistory");
                });

            modelBuilder.Entity("EIMS.WebAPI.Models.Sport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("LevelId")
                        .HasColumnType("integer");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Rank")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SportName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LevelId");

                    b.ToTable("Sport");
                });

            modelBuilder.Entity("EIMS.WebAPI.Models.Student", b =>
                {
                    b.Property<string>("StudentId")
                        .HasColumnType("text");

                    b.Property<int>("PersonalDataId")
                        .HasColumnType("integer");

                    b.HasKey("StudentId");

                    b.HasIndex("PersonalDataId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("EIMS.WebAPI.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Grade")
                        .HasColumnType("integer");

                    b.Property<int>("MonthlyGradeId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("MonthlyGradeId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("EIMS.WebAPI.Models.Complaint", b =>
                {
                    b.HasOne("EIMS.WebAPI.Models.Level", null)
                        .WithMany("Complaints")
                        .HasForeignKey("LevelId");
                });

            modelBuilder.Entity("EIMS.WebAPI.Models.Level", b =>
                {
                    b.HasOne("EIMS.WebAPI.Models.RecordHistory", "RecordHistory")
                        .WithMany()
                        .HasForeignKey("RecordHistoryId");

                    b.HasOne("EIMS.WebAPI.Models.Student", null)
                        .WithMany("Levels")
                        .HasForeignKey("StudentId");

                    b.Navigation("RecordHistory");
                });

            modelBuilder.Entity("EIMS.WebAPI.Models.MonthlyGrade", b =>
                {
                    b.HasOne("EIMS.WebAPI.Models.Level", null)
                        .WithMany("MonthlyGrades")
                        .HasForeignKey("LevelId");
                });

            modelBuilder.Entity("EIMS.WebAPI.Models.Project", b =>
                {
                    b.HasOne("EIMS.WebAPI.Models.Level", null)
                        .WithMany("Projects")
                        .HasForeignKey("LevelId");
                });

            modelBuilder.Entity("EIMS.WebAPI.Models.Sport", b =>
                {
                    b.HasOne("EIMS.WebAPI.Models.Level", null)
                        .WithMany("Sports")
                        .HasForeignKey("LevelId");
                });

            modelBuilder.Entity("EIMS.WebAPI.Models.Student", b =>
                {
                    b.HasOne("EIMS.WebAPI.Models.PersonalData", "PersonalData")
                        .WithMany()
                        .HasForeignKey("PersonalDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonalData");
                });

            modelBuilder.Entity("EIMS.WebAPI.Models.Subject", b =>
                {
                    b.HasOne("EIMS.WebAPI.Models.MonthlyGrade", "MonthlyGrade")
                        .WithMany("Subjects")
                        .HasForeignKey("MonthlyGradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonthlyGrade");
                });

            modelBuilder.Entity("EIMS.WebAPI.Models.Level", b =>
                {
                    b.Navigation("Complaints");

                    b.Navigation("MonthlyGrades");

                    b.Navigation("Projects");

                    b.Navigation("Sports");
                });

            modelBuilder.Entity("EIMS.WebAPI.Models.MonthlyGrade", b =>
                {
                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("EIMS.WebAPI.Models.Student", b =>
                {
                    b.Navigation("Levels");
                });
#pragma warning restore 612, 618
        }
    }
}
